source ~/.workstation-setup-config
eval "$($BREW_HOME/bin/brew shellenv)"

export PATH="$HOMEBREW_PREFIX/opt/curl/bin:$HOME/opt/bin:$HOME/.local/bin:$HOME/opt/gnubin${PATH+:$PATH}"
export MANPATH="$HOME/opt/gnuman:$HOMEBREW_PREFIX/man${MANPATH+:$MANPATH}";
export PATH="$PATH:$SYSTEM_PYTHON_INSTALL_PATH:$HOME/.rvm/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"

export LIBRARY_PATH="/opt/homebrew/lib${LIBRARY_PATH+:$LIBRARY_PATH}"

export AWS_FUZZ_USER="csaba.palankai"
export AWS_FUZZ_PRIVATE_IP='True'
export AWS_MIN_TTL=72000
export AWS_VAULT_PROMPT=osascript
export AWS_VAULT_KEYCHAIN_NAME=login

export PAGER=less

set -o notify
set -o histexpand

# Don't use ^D to exit
#set -o ignoreeof
if [ $TERM != 'dumb' ]; then
    #allow CTRL-s to go trough
    stty -ixon
fi

# Use case-insensitive filename globbing
# shopt -s nocaseglob

# prevent redirected output from overwriting existing files
# set -o noclobber

# Other env variables ######################
export EDITOR=vim

export HISTSIZE=100000 # bash history will save this many commands
export HISTFILESIZE=${HISTSIZE} # bash will remember this many commands
export HISTCONTROL=ignoredups # ignore duplicate commands
export HISTIGNORE="[   ]*:&:bg:fg:exit" # Ignore some controlling instructions
export HISTTIMEFORMAT="[%Y-%m-%d - %H:%M:%S] " # timestamps

# This for installed openssl by brew; being able to use for compile/build

# TODO Need to check this on M1
export LDFLAGS="-I/usr/local/opt/openssl/include -L/usr/local/opt/openssl/lib"
#export LDFLAGS="-L/usr/local/opt/curl/lib"
export CPPFLAGS="-I/usr/local/opt/curl/include"
export PKG_CONFIG_PATH="/usr/local/opt/curl/lib/pkgconfig"

export LESS=-R

if [ $TERM != 'dumb' ]; then
    export LESS_TERMCAP_md=$'\E[01;36m'
fi

# figure out supported ls options

# nice modern GNU 'ls'
if [ "$TERM" != "dumb" ] && [ ls --color >/dev/null 2>&1 ] ; then
    LS_OPTIONS='--color=auto'

# old shitty OSX 'ls'
elif ls --G >/dev/null 2>&1; then
    LS_OPTIONS='-G'

# no known color options supported, use trailing filetype chars instead
else
    LS_OPTIONS='-F'
fi

if ls --group-directories-first >/dev/null 2>&1; then
    LS_OPTIONS="$LS_OPTIONS --group-directories-first"
fi
export LS_OPTIONS

if [ "$TERM" != "dumb" ] && [ hash dircolors 2>/dev/null ]; then
    eval `dircolors -b $HOME/.dircolors`
fi

# This option make gpg ask password on terminal
export GPG_TTY=$(tty)

# GPG Based SSH setup
gpgconf --launch gpg-agent
export SSH_AUTH_SOCK=$HOME/.gnupg/S.gpg-agent.ssh

#export PATH="$PATH:$HOME/opt/anaconda3/bin"
# END gnu-tools

# BEGIN aliases
